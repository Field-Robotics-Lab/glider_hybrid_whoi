<launch>

  <arg name="gui" default="true"/>
  <arg name="paused" default="false"/>
  <arg name="set_timeout" default="false"/>
  <arg name="timeout" default="0.0"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find glider_hybrid_whoi_gazebo)/worlds/seafloor_underwater_stratified_current.world"/>
      <arg name="paused" value="$(arg paused)"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="gui" value="$(arg gui)"/>
      <arg name="debug" value="false"/>
      <arg name="verbose" value="true"/>
  </include>

  <include file="$(find uuv_assistants)/launch/publish_world_ned_frame.launch"/>

  <node name="publish_world_models"
      pkg="uuv_assistants"
      type="publish_world_models.py"
      output="screen">
      <rosparam subst_value="true">
          meshes:
              heightmap:
                  mesh: package://uuv_gazebo_worlds/models/sand_heightmap/meshes/heightmap.dae
                  model: sand_heightmap
              seafloor:
                  plane: [2000, 2000, 0.1]
                  pose:
                      position: [0, 0, -100]
              north:
                  plane: [0.1, 2000, 100]
                  pose:
                      position: [1000, 0, -50]
              south:
                  plane: [0.1, 2000, 100]
                  pose:
                      position: [-1000, 0, -50]
              west:
                  plane: [2000, 0.1, 100]
                  pose:
                      position: [0, -1000, -50]
              east:
                  plane: [2000, 0.1, 100]
                  pose:
                      position: [0, 1000, -50]
      </rosparam>
  </node>

  <group if="$(arg set_timeout)">
      <include file="$(find uuv_assistants)/launch/set_simulation_timer.launch">
          <arg name="timeout" value="$(arg timeout)"/>
      </include>
  </group>

  <arg name="record" default="false"/>
  <arg name="bag_filename" default="recording.bag"/>
  <arg name="use_ned_frame" default="false"/>
  <arg name="joy_id" default="0"/>

  <!-- Glider's initial position -->
  <arg name="x" default="4"/>
  <arg name="y" default="4"/>
  <arg name="z" default="-93"/>
  <arg name="roll" value="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw" value="0"/>

  <include file="$(find glider_hybrid_whoi_description)/launch/upload_glider_hybrid_whoi_kinematics.launch">
    <arg name="x" value="$(arg x)"/>
    <arg name="y" value="$(arg y)"/>
    <arg name="z" value="$(arg z)"/>
    <arg name="roll" value="$(arg roll)"/>
    <arg name="pitch" value="$(arg yaw)"/>
    <arg name="yaw" value="$(arg yaw)"/>
  </include>

  <include file="$(find glider_hybrid_whoi_control)/launch/start_auv_teleop.launch">
    <arg name="joy_id" default="$(arg joy_id)"/>
  </include>

  <!-- ASV's initial position -->
  <arg name="x_asv" default="4"/>
  <arg name="y_asv" default="4"/>
  <arg name="z_asv" default="2"/>
  <arg name="roll_asv" value="0"/>
  <arg name="pitch_asv" default="0"/>
  <arg name="yaw_asv" value="0"/>

  <include file="$(find glider_hybrid_whoi_description)/launch/upload_glider_asv_kinematics.launch">
    <arg name="x" value="$(arg x_asv)"/>
    <arg name="y" value="$(arg y_asv)"/>
    <arg name="z" value="$(arg z_asv)"/>
    <arg name="roll" value="$(arg roll_asv)"/>
    <arg name="pitch" value="$(arg yaw_asv)"/>
    <arg name="yaw" value="$(arg yaw_asv)"/>
  </include>

  <!-- Initialize the recording fo the simulation according to the record flag  -->
  <include file="$(find glider_hybrid_whoi_gazebo)/launch/record_demo.launch">
    <arg name="record" value="$(arg record)"/>
    <arg name="use_ned_frame" value="$(arg use_ned_frame)"/>
    <arg name="bag_filename" value="$(arg bag_filename)"/>
  </include>

</launch>
